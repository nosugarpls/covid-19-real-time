{"version":3,"sources":["services.js","Nav.jsx","Login.jsx","Menu.jsx","Box.jsx","util.js","Card.jsx","Header.jsx","Footer.jsx","Chat.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["fetchMessages","fetch","method","catch","Promise","reject","error","then","response","ok","json","Nav","user","onLogout","isLoggedIn","className","href","onClick","Login","onLogin","useState","username","setUsername","isDisabled","setIsDisabled","isPending","setIsPending","status","setStatus","src","alt","placeholder","disabled","onChange","e","target","value","headers","Headers","body","JSON","stringify","createSession","err","Menu","countries","map","country","data-name","name","Box","title","cases","total","formatNumber","data","numeral","format","Card","countryInfo","todayCases","todayRecovered","recovered","todayDeaths","deaths","Header","today","Date","date","getDate","month","getMonth","year","getFullYear","Footer","ShowMessages","messages","message","sender","timestamp","text","ShowOutgoing","onUpdate","setText","res","Chat","App","userState","setUserState","setInputCountry","setCountryInfo","setCountries","setMessages","useEffect","fetchLatest","content","url","dataset","fetchLatestMessages","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sWAAaA,G,MAAgB,WAC3B,OAAOC,MAAM,gBAAiB,CAC1BC,OAAQ,QAETC,OAAM,kBAAMC,QAAQC,OAAO,CAC1BC,MAAO,qBAERC,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXF,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,WCC1CC,G,MAVH,YAA8B,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC3B,OAAID,EAAKE,WAIP,qBAAKC,UAAU,SAAf,SAAwB,mBAAGA,UAAU,SAASC,KAAK,UAAUC,QAASJ,EAA9C,sBAHjB,OCsCIK,G,MAtCD,YAAuB,IAAZC,EAAW,EAAXA,QAAW,EACFC,mBAAS,IADP,mBAC3BC,EAD2B,KACjBC,EADiB,OAEEF,oBAAS,GAFX,mBAE3BG,EAF2B,KAEfC,EAFe,OAGAJ,oBAAS,GAHT,mBAG3BK,EAH2B,KAGhBC,EAHgB,OAINN,mBAAS,IAJH,mBAI3BO,EAJ2B,KAInBC,EAJmB,KA0BlC,OACE,sBAAKb,UAAU,aAAf,UACE,oDACA,qBAAKc,IAAI,+GAA+GC,IAAI,QAC5H,qBAAKf,UAAU,SAAf,SAAyBY,IACzB,uBAAOZ,UAAU,YAAYgB,YAAY,iBAAiBC,SAAUP,EAAWQ,SAzBlE,SAACC,GAChBN,EAAU,IACVN,EAAYY,EAAEC,OAAOC,OACrBZ,GAAeU,EAAEC,OAAOC,QAsB6EA,MAAOf,IAC1G,wBAAQJ,QApBE,WACZS,GAAa,GFaY,SAAC,GAEvB,IADLL,EACI,EADJA,SAEA,OAAOpB,MAAM,eAAgB,CACzBC,OAAQ,OACRmC,QAAS,IAAIC,QAAQ,CACnB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CACnBpB,SAAUA,MAGblB,OAAM,kBAAMC,QAAQC,OAAO,CAC1BC,MAAO,qBAERC,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXF,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,SE/BrDgC,CAAc,CAAErB,aACfd,MAAM,SAAAc,GACLF,EAAQ,CAAEE,aACVO,EAAU,IACVF,GAAa,MAEdvB,OAAO,SAAAwC,GACNf,EAAU,oBACVF,GAAa,OAUWM,SAAUT,GAAcE,EAAhD,SAA8DA,EAAY,MAAQ,UAClF,mBAAGV,UAAU,eAAb,mEACA,mBAAGA,UAAU,eAAb,6C,MCvBS6B,MAbf,YAAuC,IAAvBC,EAAsB,EAAtBA,UAAW5B,EAAW,EAAXA,QACzB,OACE,gCACE,gDACA,oBAAIF,UAAU,OAAOE,QAASA,EAA9B,SACE4B,EAAUC,KAAK,SAAAC,GAAO,OACxB,oBAAIhC,UAAU,SACdiC,YAAWD,EAAQE,KADnB,SAC0BF,EAAQE,gB,YCGzBC,MAVf,YAAsC,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MAC3B,OACE,sBAAKtC,UAAU,MAAf,UACI,kCAAKoC,EAAL,OACA,+BAAKE,EAAL,YACA,mBAAGtC,UAAU,OAAb,SAAqBqC,Q,gBCFdE,EAHM,SAACC,GAAD,OACnBA,EAAI,YAAQC,IAAQD,GAAME,OAAO,SAAY,OCqBhCC,MAnBf,YAA8B,IAAfC,EAAc,EAAdA,YACb,OACA,sBAAK5C,UAAU,YAAf,UACI,cAAC,EAAD,CAAKoC,MAAM,oBACNC,MAAOE,EAAaK,EAAYC,YAChCP,MAAOG,IAAQG,EAAYP,OAAOK,OAAO,UAE9C,cAAC,EAAD,CAAKN,MAAM,kBACNC,MAAOE,EAAaK,EAAYE,gBAChCR,MAAOG,IAAQG,EAAYG,WAAWL,OAAO,UAElD,cAAC,EAAD,CAAKN,MAAM,cACNC,MAAOE,EAAaK,EAAYI,aAChCV,MAAOG,IAAQG,EAAYK,QAAQP,OAAO,c,MCJtCQ,MAZf,WACE,IAAMC,EAAQ,IAAIC,KACZC,EAAOF,EAAMG,UACbC,EAAQJ,EAAMK,WAAa,EAC3BC,EAAON,EAAMO,cACnB,OACE,qDACsBD,EADtB,IAC6BF,EAD7B,IACqCF,M,MCE1BM,MATf,WACE,IAAMF,GAAO,IAAIL,MAAOM,cACxB,OACE,wBAAQ1D,UAAU,OAAlB,SACE,oBAAGA,UAAU,OAAb,8BAAiCyD,Q,MCOvC,IAAMG,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,oBAAI7D,UAAU,WAAd,SACI6D,EAAS9B,KAAK,SAAA+B,GAAO,OACvB,+BACA,sBAAK9D,UAAU,QAAf,UACE,sBAAMA,UAAU,SAAhB,SAA0B8D,EAAQC,SAClC,sBAAM/D,UAAU,YAAhB,SAA6B8D,EAAQE,eAEvC,qBAAKhE,UAAU,UAAf,SAA0B8D,EAAQG,gBAOlCC,EAAe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACX9D,mBAAS,IADE,mBAC5B4D,EAD4B,KACtBG,EADsB,OAEC/D,oBAAS,GAFV,mBAE5BG,EAF4B,KAEhBC,EAFgB,OAGDJ,oBAAS,GAHR,mBAG5BK,EAH4B,KAGjBC,EAHiB,KAyCnC,OACE,gCACE,uBAAOX,UAAU,YAAYgB,YAAY,eAAeC,SAAUP,EAAWQ,SAtChE,SAACC,GAChBiD,EAAQjD,EAAEC,OAAOC,OACjBZ,GAAeU,EAAEC,OAAOC,QAoC2EA,MAAO4C,IACxG,wBAAQ/D,QAlCC,WACP+D,IACJtD,GAAa,GACbzB,MAAM,gBAAkB,CACtBC,OAAQ,OACRmC,QAAS,IAAIC,QAAQ,CACrB,eAAgB,qBAEhBC,KAAMC,KAAKC,UAAU,CAAEuC,KAAMA,MAE9B7E,OAAO,kBAAMC,QAAQC,OAAO,CAAEC,MAAO,qBACrCC,MAAM,SAAAC,GACL,OAAGA,EAASC,GACHD,EAASE,OAEXF,EAASE,OAAOH,MAAM,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,SAErDH,MACC,SAAA6E,GACEF,IACAxD,GAAa,GACbyD,EAAQ,OAEXhF,OACC,SAAAwC,GACEuC,IACAxD,GAAa,GACbyD,EAAQ,SAOanD,SAAUT,GAAcE,EAA/C,SAA6DA,EAAY,MAAQ,aAKxE4D,EA1Ef,YAAsC,IAAtBT,EAAqB,EAArBA,SAAUM,EAAW,EAAXA,SACxB,OACE,sBAAKnE,UAAU,WAAf,UACE,cAAC,EAAD,CAAcA,UAAU,gBAAgB6D,SAAUA,IAClD,cAAC,EAAD,CAAc7D,UAAU,iBAAiBmE,SAAUA,QCoJ1CI,MAzIf,WAAgB,IAAD,EACqBlE,mBAAS,CACzCN,YAAY,EACZW,WAAW,IAHA,mBACN8D,EADM,KACKC,EADL,OAMsBpE,mBAAS,OAN/B,mBAMN2B,EANM,KAMG0C,EANH,OAOyBrE,mBAAS,IAPlC,mBAONuC,EAPM,KAOO+B,EAPP,OAQqBtE,mBAAS,IAR9B,mBAQNyB,EARM,KAQK8C,EARL,OASmBvE,mBAAS,IAT5B,mBASNwD,EATM,KASIgB,EATJ,KAWbC,qBAAU,WVdH5F,MAAM,eAAgB,CACzBC,OAAQ,QAETC,OAAM,kBAAMC,QAAQC,OAAO,CAC1BC,MAAO,qBAERC,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXF,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,SUMlDH,MAAK,SAAAc,GACJmE,EAAa,CACX1E,YAAY,EACZW,WAAW,EACXJ,SAAUA,IAEZyE,EAAY,CAAC/C,eAEd5C,OAAM,WACLqF,EAAa,CACX1E,YAAY,EACZW,WAAW,SAGhB,CAACsB,IAEJ,IAoFIgD,EAzEED,EAAc,YAAsB,IAAX/C,EAAU,EAAVA,QACvBiD,EAAkB,QAAZjD,EAAA,wFAEgCA,GAE5C9C,MAAM+F,GACHzF,MAAK,SAACC,GAAD,OAAcA,EAASE,UAC5BH,MAAK,SAACoD,GACL+B,EAAe/B,MACdxD,OAAM,WACPuF,EAAe,OAGnBzF,MAAM,4CACDM,MAAK,SAACC,GAAD,OAAcA,EAASE,UAC5BH,MAAK,SAACgD,GACL,IAAMV,EAAYU,EAAKT,KAAI,SAACC,GAAD,MAAc,CACvCE,KAAMF,EAAQA,YAEhB4C,EAAa9C,MACZ1C,OAAM,WACPwF,EAAa,OAGnB3F,IACGO,MAAK,SAAAqE,GACJgB,EAAYhB,MAEbzE,OAAM,WACLyF,EAAY,QAwClB,OAAIL,EAAU9D,UACH,8CAMTsE,EADER,EAAUzE,WAEZ,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAM8B,UAAWA,EAAW5B,QAjBZ,SAACiB,GACvB,IAAMa,EAAUb,EAAEC,OAAO8D,QAAQhD,KACjCwC,EAAgB1C,MAgBV,cAAC,EAAD,CAAMY,YAAaA,OAErB,qBAAK5C,UAAU,kBAAf,SACE,cAAC,EAAD,CAAM6D,SAAUA,EAAUM,SApDN,SAAtBgB,IACJlG,IACGO,MAAK,SAAAqE,GACJgB,EAAYhB,MAEbzE,OAAM,WACLyF,EAAY,OAEbrF,KAAK4F,WAAWD,EAAqB,cA+CtC,cAAC,EAAD,CAAKtF,KAAM2E,EAAW1E,SA5CX,WACb2E,EAAa,2BACRD,GADO,IAEV9D,WAAW,KVpDRxB,MAAM,eAAgB,CACzBC,OAAQ,WAETC,OAAM,kBAAMC,QAAQC,OAAO,CAC1BC,MAAO,qBAERC,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXF,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,SU6ClDH,MAAK,WACJiF,EAAa,CACX1E,YAAY,EACZW,WAAW,OAGdtB,OAAM,WACLqF,EAAa,2BACRD,GADO,IAEV9D,WAAW,WA8Bf,cAAC,EAAD,OAGQ,cAAC,EAAD,CAAON,QAvGL,YAEV,IADFE,EACC,EADDA,SAEAmE,EAAa,CACX1E,YAAY,EACZW,WAAW,EACXJ,SAAUA,IAEZyE,EAAY,CAAC/C,eAiGN,8BAAMgD,MC7IFK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/F,MAAK,YAAkD,IAA/CgG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9fea9fe1.chunk.js","sourcesContent":["export const fetchMessages = () => {\n  return fetch('/api/messages', {\n      method: 'GET',\n    })\n    .catch(() => Promise.reject({\n      error: 'network-error'\n    }))\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json().then(json => Promise.reject(json));\n    });\n};\n\nexport const checkSession = () => {\n  return fetch('/api/session', {\n      method: 'GET',\n    })\n    .catch(() => Promise.reject({\n      error: 'network-error'\n    }))\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json().then(json => Promise.reject(json));\n    });\n};\n\nexport const createSession = ({\n  username\n}) => {\n  return fetch('/api/session', {\n      method: 'POST',\n      headers: new Headers({\n        'content-type': 'application/json',\n      }),\n      body: JSON.stringify({\n        username: username\n      }),\n    })\n    .catch(() => Promise.reject({\n      error: 'network-error'\n    }))\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json().then(json => Promise.reject(json));\n    });\n};\n\nexport const endSession = () => {\n  return fetch('/api/session', {\n      method: 'DELETE',\n    })\n    .catch(() => Promise.reject({\n      error: 'network-error'\n    }))\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json().then(json => Promise.reject(json));\n    });\n};","import './Nav.css';\n\nconst Nav = function({ user, onLogout }) {\n  if(!user.isLoggedIn) {\n    return null;\n  }\n  return (\n    <nav className=\"logout\"><a className=\"logout\" href=\"#logout\" onClick={onLogout}>Logout</a>\n    </nav>\n  );\n};\n\nexport default Nav;","import './Login.css';\nimport { useState } from 'react';\nimport { createSession } from './services';\n\nconst Login = function({ onLogin }) {\n  const [username, setUsername] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isPending, setIsPending] = useState(false);\n  const [status, setStatus] = useState('');\n\n  const onChange = (e) => {\n    setStatus('');\n    setUsername(e.target.value);\n    setIsDisabled(!e.target.value);\n  };\n\n  const login = () => {\n    setIsPending(true);\n    createSession({ username })\n    .then( username => {\n      onLogin({ username });\n      setStatus('');\n      setIsPending(false);\n    })\n    .catch( err => {\n      setStatus('Username Invalid');\n      setIsPending(false);\n    });\n  };\n\n  return (\n    <div className=\"login-page\">\n      <h1>COVID-19 Real-Time</h1>\n      <img src=\"https://deadline.com/wp-content/uploads/2020/03/coronavirus-drawing-covid-19-covid-19.jpg?w=681&h=383&crop=1\" alt=\"pic\"/>\n      <div className=\"status\">{status}</div>\n      <input className=\"type-area\" placeholder=\"Enter username\" disabled={isPending} onChange={onChange} value={username} />\n      <button onClick={login} disabled={isDisabled || isPending} >{ isPending ? \"...\" : \"Login\"}</button>\n      <p className=\"instructions\">Username should contain alphanumeric characters only.</p>\n      <p className=\"instructions\">Username could not be dog.</p>\n    </div>\n  );\n};\nexport default Login;","import \"./Menu.css\";\n\nfunction Menu({ countries, onClick }) {\n  return (\n    <div>\n      <h4>Scroll & Click</h4>\n      <ol className=\"menu\" onClick={onClick}>\n      { countries.map( country => \n      <li className=\"choice\"\n      data-name={country.name}>{country.name}</li>) }\n      </ol>    \n    </div>\n  );\n}\n\nexport default Menu;","import './Box.css';\n\nfunction Box({ title, cases, total}) {\n  return (\n    <div className=\"box\">\n        <p> {title} </p>\n        <h3>{total} Total</h3>\n        <p className=\"case\">{cases}</p>\n    </div>\n  );\n}\n\nexport default Box;","import numeral from \"numeral\";\n\nconst formatNumber = (data) =>\n  data ? `+ ${numeral(data).format(\"0.0a\")}` : \"+ 0\";\n\nexport default formatNumber;","import './Card.css';\nimport Box from \"./Box\";\nimport formatNumber from \"./util\";\nimport numeral from \"numeral\";\n\nfunction Card({countryInfo}) {\n  return (\n  <div className=\"container\">\n      <Box title=\"Coronavirus Cases\" \n           cases={formatNumber(countryInfo.todayCases)}\n           total={numeral(countryInfo.cases).format(\"0.0a\")}\n      />\n      <Box title=\"Recovered Cases\"\n           cases={formatNumber(countryInfo.todayRecovered)}\n           total={numeral(countryInfo.recovered).format(\"0.0a\")}\n      />\n      <Box title=\"Death Cases\"\n           cases={formatNumber(countryInfo.todayDeaths)}\n           total={numeral(countryInfo.deaths).format(\"0.0a\")}\n      />\n    </div>\n  );\n}\n\nexport default Card;","import './Header.css';\n\nfunction Header() {\n  const today = new Date();\n  const date = today.getDate();\n  const month = today.getMonth() + 1;\n  const year = today.getFullYear();\n  return (\n    <h1>\n      COVID-19 Real-Time {year}.{month}.{date}\n    </h1>\n  );\n}\n\nexport default Header;","import './Footer.css';\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer className=\"foot\">\n      <p className=\"foot\">Copyright ⓒ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import './Chat.css';\nimport React from 'react';\nimport { useState } from 'react';\n\nfunction Chat({ messages, onUpdate}) {\n  return (\n    <div className=\"chat-app\">\n      <ShowMessages className=\"display-panel\" messages={messages}/>\n      <ShowOutgoing className=\"outgoing-panel\" onUpdate={onUpdate}/> \n    </div>\n  );\n}\n\nconst ShowMessages = ( {messages} ) => {\n  return ( \n    <ol className=\"messages\">\n      { messages.map( message => ( \n      <li>\n      <div className=\"stamp\">\n        <span className=\"sender\">{message.sender}</span>\n        <span className=\"timestamp\">{message.timestamp}</span>\n      </div>\n      <div className=\"message\">{message.text}</div>\n      </li>\n      ) ) }\n    </ol>\n  );\n};\n\nconst ShowOutgoing = ({onUpdate}) => {\n  const [text, setText] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isPending, setIsPending] = useState(false);\n\n  const onChange = (e) => {\n    setText(e.target.value);\n    setIsDisabled(!e.target.value);\n  };\n\n  const send = () => {\n    if(!text) return;\n    setIsPending(true);\n    fetch('/api/messages',  {\n      method: 'POST',\n      headers: new Headers({\n      'content-type': 'application/json',\n    }),\n      body: JSON.stringify({ text: text }),\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n      if(response.ok) {\n        return response.json();\n      }\n      return response.json().then( json => Promise.reject(json) );\n    })\n    .then( \n      res => { \n        onUpdate();\n        setIsPending(false);\n        setText('');\n      })\n    .catch( \n      err => {\n        onUpdate();\n        setIsPending(false);\n        setText('');\n    });\n  };\n\n  return (\n    <div>\n      <input className=\"type-area\" placeholder=\"Type message\" disabled={isPending} onChange={onChange} value={text} />\n      <button onClick={send} disabled={isDisabled || isPending} >{ isPending ? \"...\" : \"Send\"}</button>\n    </div>\n  );\n};\n\nexport default Chat;","import './App.css';\nimport {\n  useState,\n  useEffect\n} from 'react';\nimport {\n  fetchMessages,\n  endSession,\n  checkSession\n} from './services';\n\nimport Nav from './Nav';\nimport Login from './Login';\nimport Menu from './Menu';\nimport Card from './Card';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Chat from './Chat';\n\nfunction App() {\n  const [userState, setUserState] = useState({\n    isLoggedIn: false,\n    isPending: true\n  });\n\n  const [country, setInputCountry] = useState(\"all\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]); \n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    checkSession()\n      .then(username => {\n        setUserState({\n          isLoggedIn: true,\n          isPending: false,\n          username: username,\n        });\n        fetchLatest({country});\n      })\n      .catch(() => {\n        setUserState({\n          isLoggedIn: false,\n          isPending: false,\n        });\n      });\n  }, [country]); \n\n  const login = function ({\n    username\n  }) {\n    setUserState({\n      isLoggedIn: true,\n      isPending: false,\n      username: username\n    });\n    fetchLatest({country});\n  };\n\n  const fetchLatest = function ({country}) {\n    const url = country === \"all\" ? \n    `https://disease.sh/v3/covid-19/all` :\n    `https://disease.sh/v3/covid-19/countries/${country}`;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((countryInfo) => {\n        setCountryInfo(countryInfo);\n      }).catch(() => {\n        setCountryInfo({});\n      });\n\n    fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n          }));\n          setCountries(countries);   \n        }).catch(() => {\n          setCountries([]);\n        });\n\n    fetchMessages()\n      .then(messages => {\n        setMessages(messages);\n      })\n      .catch(() => {\n        setMessages([]);\n      });\n  };\n\n  const fetchLatestMessages = () => {\n    fetchMessages()\n      .then(messages => {\n        setMessages(messages);\n      })\n      .catch(() => {\n        setMessages([]);\n      })\n      .then(setTimeout(fetchLatestMessages, 1000));\n  };\n\n  const logout = function () {\n    setUserState({\n      ...userState,\n      isPending: true,\n    });\n    endSession()\n      .then(() => {\n        setUserState({\n          isLoggedIn: false,\n          isPending: false,\n        });\n      })\n      .catch(() => {\n        setUserState({\n          ...userState,\n          isPending: false,\n        });\n      });\n  };\n\n  const onCountryChange = (e) => {\n    const country = e.target.dataset.name;\n    setInputCountry(country);\n  };\n\n  if (userState.isPending) {\n    return ( <div>Loading...</div> );\n  }\n\n  let content;\n\n  if (userState.isLoggedIn) {\n    content = \n    <div className=\"app\">\n      <div className=\"top-container\">\n        <div className=\"left-container\">\n          <Header />\n          <Menu countries={countries} onClick={onCountryChange}/>\n          <Card countryInfo={countryInfo}/>\n        </div>\n        <div className=\"right-container\">\n          <Chat messages={messages} onUpdate={fetchLatestMessages}/>\n        </div>\n      </div>\n      <Nav user={userState} onLogout={logout}/>  \n      <Footer />    \n    </div>\n  } else {\n    content = <Login onLogin = {login}/>;  \n  }\n  return ( <div>{content}</div>);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}